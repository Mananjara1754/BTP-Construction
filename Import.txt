//Controller
 public function import_csv() {  
        $files = array('maison_travaux_csv', 'devis_csv', 'paiements_csv');
        $upload_path = './assets/fichier/import/';
        $config['upload_path']   = $upload_path;
        $config['allowed_types'] = 'csv';
        $config['max_size']      = 1024;
        $this->load->library('upload', $config);
    
        foreach ($files as $file) {
            if (!empty($_FILES[$file]['name'])) {
                $file_name = $_FILES[$file]['name'];
                if (file_exists($upload_path . $file_name)) {
                    echo "Le fichier " . $file_name . " est déjà importé.";
                    redirect('Admin/home');                   
                } else {
                    if ($this->upload->doUpload($file)) {
                        $file_data = $this->upload->data();
                        $file_path = $file_data['full_path'];
                        $this->Import_model->import_csv($file_path, $file);     
                    } else {
                        echo $this->upload->display_errors();
                    }
                }
            } else {
                echo "Aucun fichier sélectionné pour " . $file . ".";
            }
        }
    
        redirect('Admin/home');
    }

//model

public function import_csv($file_path, $file_type) {
        $file = fopen($file_path, 'r');
        if ($file === false) {
            log_message('error', 'Impossible d\'ouvrir le fichier CSV : ' . $file_path);
            return;
        }
    
        $line_number = 1;
    
        // Lire et ignorer la première ligne (en-têtes)
        fgetcsv($file);
    
        while (($line = fgetcsv($file, 0, ',', '"')) !== FALSE) {
            // Utiliser array_map pour éliminer les espaces autour de chaque élément
            $trimmed_line = array_map('trim', $line);

            // Convertir les virgules en points pour les valeurs numériques
            foreach ($trimmed_line as $key => $value) {
                // Vérifier si la valeur est un pourcentage
                if (strpos($value, '%') !== false) {
                    // Supprimer le signe de pourcentage et convertir en valeur décimale
                    $trimmed_line[$key] = str_replace(',', '.', str_replace('%', '', $value)) / 100;
                } else if (is_numeric(str_replace(',', '.', $value))) {
                    // Remplacer les virgules par des points pour les séparateurs décimaux
                    $trimmed_line[$key] = str_replace(',', '.', $value);
                }
            }
    
            // Ajuster en fonction du type de fichier CSV
            if ($file_type == 'maison_travaux_csv' && count($trimmed_line) >= 4) {
                var_dump($trimmed_line);
                $data = array(
                    'maison' => $trimmed_line[0], 
                    'description' => $trimmed_line[1], 
                    'surface' => $trimmed_line[2],  
                    'code_travaux' => $trimmed_line[3],
                    'type_travaux' => $trimmed_line[4],
                    'unite' => $trimmed_line[5],
                    'prix_unitaire' => $trimmed_line[6],
                    'quantite' => $trimmed_line[7],
                    'duree_travaux' => $trimmed_line[8]
                );
                $this->db->insert('maison_travaux', $data);
            } elseif ($file_type == 'devis_csv' && count($trimmed_line) >= 4) {
                // Traiter les données du fichier "devis"
                var_dump($trimmed_line);
                $data = array(
                    'client' => $trimmed_line[0], 
                    'ref_devis' => $trimmed_line[1], 
                    'type_maison' => $trimmed_line[2],  
                    'finition' => $trimmed_line[3],
                    'taux_finition' => $trimmed_line[4],
                    'date_devis' => $trimmed_line[5],
                    'date_debut' => $trimmed_line[6],
                    'lieu' => $trimmed_line[7]
                );
                $this->db->insert('devis_finition', $data);
            } elseif ($file_type == 'paiements_csv' && count($trimmed_line) >= 4) {
                // Traiter les données du fichier "paiements"
                var_dump($trimmed_line);
                $data = array(
                    'ref_devis' => $trimmed_line[0],
                    'ref_paiement' => $trimmed_line[1],
                    'date_paiement' => $trimmed_line[2],
                    'montant' => $trimmed_line[3]
                );
                $this->db->insert('paiement_devis', $data);
            } else {
                $error_message = 'La ligne ' . $line_number . ' du CSV ne contient pas suffisamment de valeurs : ' . implode(';', $trimmed_line);
                log_message('error', $error_message);
            }
    
            $line_number++;
        }
    
        fclose($file);
    }